%w[ant bear red_panda].all? { |word| word.length >= 3 }
true

%w[ant bear red_panda].all? { |word| word.length >= 4 }
false

[nil, true, 99].all?
false

%w[ant bear red_panda].any? { |word| word.length >= 3 }
true

%w[ant bear red_panda].any? { |word| word.length >= 4 }
true

[nil, true, 99].any?
true

(1..4).map { |i| i*i }
[1, 4, 9, 16]

(1..3).collect { "panda"  }
["panda", "panda", "panda"]

[1, 2].flat_map { |e| [e, -e] }
[1, -1, 2, -2]

[[1, 2], [3, 4]].flat_map { |e| e + [100] }
[1, 2, 100, 3, 4, 100]

[1, 2, 4, 2].count
4

[1, 2, 4, 2].count(2)
2

[1, 2, 4, 2].count{ |x| x%2==0 }
3

(1..10).detect   { |i| i % 5 == 0 and i % 7 == 0 }
nil

(1..100).find    { |i| i % 5 == 0 and i % 7 == 0 }
35

[1, 2, 3, 4, 5, 0].drop(3)
[4, 5, 0]

[1, 2, 3, 4, 5, 0].drop_while { |i| i < 3 }
[3, 4, 5, 0]

(1..4).each_with_object([]) { |i, a| a << i*2 }
[2, 4, 6, 8]

(1..10).find_all { |i|  i % 3 == 0 }
[3, 6, 9]

[1,2,3,4,5].select { |num|  num.even?  }
[2, 4]

(1..10).find_index  { |i| i % 5 == 0 and i % 7 == 0 }
nil

(1..100).find_index { |i| i % 5 == 0 and i % 7 == 0 }
34

(1..100).find_index(50)
49

%w[panda bear hawk].first
"panda"

%w[panda bear hawk].first(2)
["panda", "bear"]

%w[panda bear hawk].first(4)
["panda", "bear", "hawk"]

[].first
nil

[].first(10)
[]

(1..100).grep 38..40
[38, 39, 40]

(1..10).grep_v 2..5
[1, 6, 7, 8, 9, 10]

(1..10).grep_v(3..8) { |v| v * 2 }
[2, 4, 18, 20]

(1..6).group_by { |i| i%3 }
{1=>[1, 4], 2=>[2, 5], 0=>[3, 6]}

(5..10).reduce(:+)
45

(5..10).inject { |sum, n| sum + n }
45

(2..4).reduce(1, :*)
24

(3..5).inject(1) { |product, n| product * n }
60

%w(red_panda golden_bear nighthawk).max
"red_panda"

%w(red_panda golden_bear nighthawk).max(2)
["red_panda", "nighthawk"]

%w(red_panda golden_bear hawk).max { |a, b| a.length <=> b.length }
"golden_bear"

%w(red_panda golden_bear hawk).max { |a, b| b.length <=> a.length }
"hawk"

%w(red_panda golden_bear hawk).max_by { |x| x.length }
"golden_bear"

%w(red_panda golden_bear hawk).max_by(2) { |x| x.length }
["golden_bear", "red_panda"]

%w(red_panda golden_bear hawk).min
"golden_bear"

[1, 2, 30].min
1

[1, 2, 30].max
30

%w(red_panda golden_bear hawk).min(0)
[]

%w(red_panda golden_bear hawk).minmax
["golden_bear", "red_panda"]

%w(red_panda golden_bear hawk).minmax { |a, b| a.length <=> b.length }
["hawk", "golden_bear"]

%w(red_panda golden_bear hawk).minmax_by { |x| x.length }
["hawk", "golden_bear"]

%w{bear panda hawk}.none? { |word| word.length == 5 }
false

%w{bear panda hawk}.none? { |word| word.length >= 6 }
true

%w{bear panda hawk}.one? { |word| word.length >= 5 }
true

%w{bear panda hawk}.one? { |word| word.length >= 2 }
false

(1..10).reject { |i|  i % 3 == 0 }
[1, 2, 4, 5, 7, 8, 10]

[1, 2, 3, 4, 5].reject { |num| num.even? }
[1, 3, 5]

%w{bear panda hawk}.sort
["bear", "hawk", "panda"]

%w{bear panda hawk}.sort { |a, b| b <=> a }
["panda", "hawk", "bear"]

(1..5).sort { |a, b| b <=> a }
[5, 4, 3, 2, 1]

%w{bear panda hawk}.sort_by { |word| word.length}
["bear", "hawk", "panda"]

[1, 2, 3, 4, 5, 0].take(3)
[1, 2, 3]

[1, 2, 3, 4, 5, 0].take_while { |i| i < 3 }
[1, 2]

(1..3).to_a
[1, 2, 3]

[ 1, 2].zip([ 8, 9 ])
[[1, 8], [2, 9]]







































